package helper;


import model.Appointment;
import model.AppointmentList;

import java.sql.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class AppointmentQuery {

    public List<Appointment> getAppointments() {
        List<Appointment> appointments = new ArrayList<>();

        String query = "SELECT a.*, c.Contact_Name " +
                "FROM appointments a " +
                "JOIN contacts c ON a.Contact_ID = c.Contact_ID";

        try (PreparedStatement preparedStatement = ConnectionHelper.getConnection().prepareStatement(query);
             ResultSet resultSet = preparedStatement.executeQuery()) {
            while (resultSet.next()) {
                int appointmentId = resultSet.getInt("Appointment_ID");
                int customerId = resultSet.getInt("Customer_ID");
                int contactId = resultSet.getInt("Contact_ID");
                int userId = resultSet.getInt("User_ID");
                String title = resultSet.getString("Title");
                String description = resultSet.getString("Description");
                String location = resultSet.getString("Location");
                String type = resultSet.getString("Type");
                String createdBy = resultSet.getString("Created_By");
                String lastUpdatedBy = resultSet.getString("Last_Updated_By");
                LocalDateTime start = resultSet.getTimestamp("Start").toLocalDateTime();
                LocalDateTime end = resultSet.getTimestamp("End").toLocalDateTime();
                LocalDateTime createDate = resultSet.getTimestamp("Create_Date").toLocalDateTime();
                LocalDateTime lastUpdate = resultSet.getTimestamp("Last_Update").toLocalDateTime();
                String contactName = resultSet.getString("Contact_Name");

                appointments.add(new Appointment(appointmentId, contactId, customerId, userId, title, description, location, type, createdBy, lastUpdatedBy, start, end, createDate, lastUpdate));
            }
        } catch (SQLException e) {
            System.out.println("SQL Error");
            e.printStackTrace(System.out);
        }
        return appointments;
    }

    public static void insertAppointment(Appointment appointment) {
        try {
            Connection conn = ConnectionHelper.getConnection();
            String insertStatement = "INSERT INTO appointments(Customer_ID, User_ID, Title, Description, Location, Type, Start, End, Create_Date, Created_By, Last_Update, Last_Updated_By, Contact_ID) " +
                    "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

            PreparedStatement preparedStatement = conn.prepareStatement(insertStatement, Statement.RETURN_GENERATED_KEYS);
            preparedStatement.setInt(1, appointment.getCustomerId());
            preparedStatement.setInt(2, appointment.getUserId());
            preparedStatement.setString(3, appointment.getTitle());
            preparedStatement.setString(4, appointment.getDescription());
            preparedStatement.setString(5, appointment.getLocation());
            preparedStatement.setString(6, appointment.getType());
            preparedStatement.setTimestamp(7, Timestamp.valueOf(appointment.getStartDateTime()));
            preparedStatement.setTimestamp(8, Timestamp.valueOf(appointment.getEndDateTime()));
            preparedStatement.setTimestamp(9, Timestamp.valueOf(appointment.getCreateDate()));
            preparedStatement.setString(10, appointment.getCreatedBy());
            preparedStatement.setTimestamp(11, Timestamp.valueOf(appointment.getLastUpdate()));
            preparedStatement.setString(12, appointment.getLastUpdatedBy());
            preparedStatement.setInt(13, appointment.getContactId());
            preparedStatement.executeUpdate();

            ResultSet rs = preparedStatement.getGeneratedKeys();
            if (rs.next()) {
                int autoGeneratedId = rs.getInt(1);
                appointment.setAppointmentId(autoGeneratedId);
                AppointmentList.addAppointment(appointment);
            }

            System.out.println("Appointment added!");
            preparedStatement.close();
        } catch (SQLException e) {
            System.out.println("SQLException: " + e.getMessage());
        }
    }

}
